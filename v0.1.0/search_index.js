var documenterSearchIndex = {"docs":
[{"location":"api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"api/#Modules","page":"API","title":"Modules","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Order = [:module]","category":"page"},{"location":"api/#Types-and-constants","page":"API","title":"Types and constants","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Order = [:type, :constant]","category":"page"},{"location":"api/#Functions-and-macros","page":"API","title":"Functions and macros","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Order = [:macro, :function]","category":"page"},{"location":"api/#Documentation","page":"API","title":"Documentation","text":"","category":"section"},{"location":"api/#StaticThings.StaticThings","page":"API","title":"StaticThings.StaticThings","text":"StaticThings\n\nStaticThings provides tools to help write generic code that works with both static and non-static values and arrays.\n\n\n\n\n\n","category":"module"},{"location":"api/#StaticThings.AxesLike","page":"API","title":"StaticThings.AxesLike","text":"AxesLike = Union{Tuple{},Tuple{Vararg{AbstractVector{<:IntegerLike}}}}\n\nSomething that can represent axes of a collection.\n\n\n\n\n\n","category":"type"},{"location":"api/#StaticThings.NoTypeSize","page":"API","title":"StaticThings.NoTypeSize","text":"StaticThings.NoTypeSize(T)\n\nReturned by StaticThings.size_from_type(T) if the size of values of type T is not fixed or not known.\n\n\n\n\n\n","category":"type"},{"location":"api/#StaticThings.StaticAxesLike","page":"API","title":"StaticThings.StaticAxesLike","text":"StaticAxesLike = Tuple{Vararg{Union{StaticArrays.SOneTo,StaticArrays.SUnitRange,Static.SUnitRange}}}\n\nSomething that can represent axes of a statically sized collection.\n\n\n\n\n\n","category":"type"},{"location":"api/#StaticThings.StaticOneTo","page":"API","title":"StaticThings.StaticOneTo","text":"const StaticOneTo{T} = StaticArrays.SOneTo{T}\n\nThe StaticThings default type for static one-based unit ranges.\n\nCurrently an alias for StaticArrays.SOneTo.\n\n\n\n\n\n","category":"type"},{"location":"api/#StaticThings.StaticUnitRange","page":"API","title":"StaticThings.StaticUnitRange","text":"StaticUnitRange\n\nThe StaticThings default type for static unit ranges.\n\nCurrently an alias for StaticArrays.SUnitRange, if it exists, otherwise an alias for Static.SUnitRange.\n\n\n\n\n\n","category":"type"},{"location":"api/#StaticThings.IntegerLike","page":"API","title":"StaticThings.IntegerLike","text":"IntegerLike = Union{Integer,Static.StaticInteger}\n\nEquivalent to Union{Integer,Static.StaticInteger}.\n\n\n\n\n\n","category":"type"},{"location":"api/#StaticThings.OneToLike","page":"API","title":"StaticThings.OneToLike","text":"OneToLike = Union{Base.OneTo,StaticArrays.SOneTo,Static.SOneTo}\n\nAlias for unit ranges that start at one.\n\n\n\n\n\n","category":"type"},{"location":"api/#StaticThings.SizeLike","page":"API","title":"StaticThings.SizeLike","text":"SizeLike = Union{Tuple{},Tuple{Vararg{IntegerLike}},StaticArrays.Size}\n\nSomething that can represent the size of a collection.\n\n\n\n\n\n","category":"type"},{"location":"api/#StaticThings.StaticOneToLike","page":"API","title":"StaticThings.StaticOneToLike","text":"StaticOneToLike{N} = Union{StaticArrays.SOneTo{N},Static.SOneTo{N}}\n\nA static unit range from one to N.\n\n\n\n\n\n","category":"type"},{"location":"api/#StaticThings.StaticSizeLike","page":"API","title":"StaticThings.StaticSizeLike","text":"StaticSizeLike = Union{Tuple{Vararg{StaticInteger}},StaticArrays.Size}\n\nSomething that can represent the size of a statically sized collection.\n\n\n\n\n\n","category":"type"},{"location":"api/#StaticThings.StaticUnitRangeLike","page":"API","title":"StaticThings.StaticUnitRangeLike","text":"StaticUnitRangeLike = Union{StaticArrays.SOneTo,StaticArrays.SUnitRange,Static.SUnitRange}\n\nA static unit range.\n\n\n\n\n\n","category":"type"},{"location":"api/#StaticThings.asaxes","page":"API","title":"StaticThings.asaxes","text":"asaxes(axs::AxesLike)\nasaxes(sz::SizeLike)\nasaxes(len::IntegerLike)\n\nConverts axes or a size or a length of a collection to axes.\n\nOne-based indexing will be used if the indexing offset can't be inferred from the given dimensions.\n\n\n\n\n\n","category":"function"},{"location":"api/#StaticThings.asnonstatic","page":"API","title":"StaticThings.asnonstatic","text":"asnonstatic(x)\n\nReturn a non-static equivalent of x.\n\nDefaults to Static.dynamic(x).\n\n\n\n\n\n","category":"function"},{"location":"api/#StaticThings.axes2size","page":"API","title":"StaticThings.axes2size","text":"StaticThings.axes2size(x::Tuple)\nStaticThings.axes2size(x::StaticArrays.Size)\n\nGet the size of a collection-like object from it's axes.\n\n\n\n\n\n","category":"function"},{"location":"api/#StaticThings.canonical_axes","page":"API","title":"StaticThings.canonical_axes","text":"canonical_axes(sz::SizeLike)\n\nReturn the canonical representation collection axes.\n\n\n\n\n\n","category":"function"},{"location":"api/#StaticThings.canonical_indices","page":"API","title":"StaticThings.canonical_indices","text":"canonical_indices(idxs::AbstractVector{<:IntegerLike})\n\nReturn the canonical representation of a collection axis indices.\n\n\n\n\n\n","category":"function"},{"location":"api/#StaticThings.canonical_size","page":"API","title":"StaticThings.canonical_size","text":"canonical_size(sz::SizeLike)\n\nReturn the canonical representation of a collection size.\n\n\n\n\n\n","category":"function"},{"location":"api/#StaticThings.maybestatic_axes","page":"API","title":"StaticThings.maybestatic_axes","text":"maybestatic_axes(x)::Tuple{Vararg{IntegerLike}}\n\nReturns the size of x as a tuple of dynamic or static integers.\n\n\n\n\n\n","category":"function"},{"location":"api/#StaticThings.maybestatic_eachindex","page":"API","title":"StaticThings.maybestatic_eachindex","text":"maybestatic_eachindex(x)\n\nReturns the the index range of x as a dynamic or static integer range\n\n\n\n\n\n","category":"function"},{"location":"api/#StaticThings.maybestatic_fill","page":"API","title":"StaticThings.maybestatic_fill","text":"maybestatic_fill(x, sz::NTuple{N,<:IntegerLike}) where N\n\nCreates an array of size sz filled with x.\n\nThe result will typically be either a FillArrays.Fill or a StaticArrays.StaticArray.\n\n\n\n\n\n","category":"function"},{"location":"api/#StaticThings.maybestatic_first","page":"API","title":"StaticThings.maybestatic_first","text":"maybestatic_first(A)\n\nReturns the first element of A as a dynamic or static value.\n\n\n\n\n\n","category":"function"},{"location":"api/#StaticThings.maybestatic_last","page":"API","title":"StaticThings.maybestatic_last","text":"maybestatic_last(A)\n\nReturns the last element of A as a dynamic or static value.\n\n\n\n\n\n","category":"function"},{"location":"api/#StaticThings.maybestatic_length","page":"API","title":"StaticThings.maybestatic_length","text":"maybestatic_length(x)\n\nReturns the length of x as a dynamic or static integer.\n\n\n\n\n\n","category":"function"},{"location":"api/#StaticThings.maybestatic_oneto","page":"API","title":"StaticThings.maybestatic_oneto","text":"maybestatic_oneto(n::IntegerLike)\n\nCreates a range from one to n.\n\nReturns an instance of Base.OneTo or StaticOneTo, depending on the type of n.\n\n\n\n\n\n","category":"function"},{"location":"api/#StaticThings.maybestatic_reshape","page":"API","title":"StaticThings.maybestatic_reshape","text":"maybestatic_reshape(A, sz)\n\nReshapes array A to sizes sz.\n\nIf A is a static array and sz is static, the result is a static array.\n\n\n\n\n\n","category":"function"},{"location":"api/#StaticThings.maybestatic_size","page":"API","title":"StaticThings.maybestatic_size","text":"maybestatic_size(x)\n\nReturns the size of x as a tuple of dynamic or static integers.\n\n\n\n\n\n","category":"function"},{"location":"api/#StaticThings.size2axes","page":"API","title":"StaticThings.size2axes","text":"size2axes(sz::Tuple)\nsize2axes(sz::StaticArrays.Size)\n\nGet one-based indexing axes from a size of a collection-like object.\n\n\n\n\n\n","category":"function"},{"location":"api/#StaticThings.size2length","page":"API","title":"StaticThings.size2length","text":"size2length(sz::Tuple)\nsize2length(sz::StaticArrays.Size)\n\nGet a length from a size (tuple).\n\n\n\n\n\n","category":"function"},{"location":"api/#StaticThings.size_from_type","page":"API","title":"StaticThings.size_from_type","text":"size_from_type(::Type{T})::StaticThings.SizeLike\n\nGet the size (equivalent of StaticThings.maybestatic_size) of values of type T.\n\nRequires values of type T to have a fixed known size, returns StaticThings.NoTypeSize{T}() otherwise.\n\n\n\n\n\n","category":"function"},{"location":"api/#StaticThings.staticarray_type","page":"API","title":"StaticThings.staticarray_type","text":"staticarray_type(T, sz::StaticArrays.Size)\n\nReturns the type of a static array with element type T and size sz.\n\n\n\n\n\n","category":"function"},{"location":"LICENSE/#LICENSE","page":"LICENSE","title":"LICENSE","text":"","category":"section"},{"location":"LICENSE/","page":"LICENSE","title":"LICENSE","text":"using Markdown\nMarkdown.parse_file(joinpath(@__DIR__, \"..\", \"..\", \"LICENSE.md\"))","category":"page"},{"location":"#StaticThings.jl","page":"Home","title":"StaticThings.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"StaticThings provides tools to help write generic code that works with both static and non-static values and arrays. It bridges between Static values, StaticArrays and FillArrays, as well as non-static values and arrays.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The package provides the type aliases StaticUnitRange, StaticOneTo, IntegerLike, SizeLike, StaticSizeLike, AxesLike, StaticAxesLike, OneToLike, StaticOneToLike and StaticUnitRangeLike, as union-based super-types for related types across Static, StaticArrays and Base.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Built around these alias types, StaticThings provides:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Generative functions: maybestatic_oneto, asnonstatic, maybestatic_fill, staticarray_type and maybestatic_reshape.\nLength/size/axes query functions: maybestatic_length, maybestatic_size, maybestatic_axes, maybestatic_eachindex, maybestatic_first, maybestatic_last and size_from_type.\nSize/axes conversion functions: axes2size, size2axes, size2length, asaxes, canonical_indices, canonical_size and canonical_axes.","category":"page"},{"location":"","page":"Home","title":"Home","text":"When creating arrays, StaticThings prefers allocation-free types like StaticArrays.SArray and FillArrays.Fill where feasible.","category":"page"}]
}
